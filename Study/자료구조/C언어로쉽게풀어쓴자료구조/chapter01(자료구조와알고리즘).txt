1.1자료구조와알고리즘
- 사람이 사물을 정리하는 방법이 있듯이 프로그램에서도 자료들을 정리하여 보관하는 여가가지 구조들이 있다 이게 자료구조이다.

- 일상생활과 프로그램 자료구조의 관계예시 :
  그릇을 쌓아놓는 것 == 스택
  마트에 계산대에 늘어선 줄 == 큐
  영어사전 == 사전(dictionary)
  버킷리스트 == 리스트
  지도 == 그래프
  컴퓨터디렉토리구조 == 트리

- 프로그램은 보통 자료를 처리하고 있고 이를 자료구조를 사용하여 저장, 자료에 대한 주어진 문제를 처리하는 절차를 알고리즘을 사용하고 있다 
  프로그램 = 자료구조 + 알고리즘
*프로그래밍에서 절대 빠지지 않는 요소이다.

1.2추상 자료형
- 자료형 : 데이터의 종류.
  기초자료형 : int, char, float..
  파생자료형 : 배열, 포인터
  사용자정의자료형 : 구조체, 공동체, 열거형

- 프로그래밍 추상화란 프로그램에서 중요한 기술이나 명세 핵심적인 구조나 동작에만 집중하여 사용자(그래그래머)에게 중요한 정보는 강조
  하고 세부사항은 정보은닉하여 감춤.
* 핵심기술을 추상화해서 인터페이스화만 잘해놓아도 가독성이 증가할것 같다. 이름만 보더라도 하는일을 알수있음 세부적인 내용을 볼필요없음.

- 추상화(Abstraction / ADT)를 TV에 부연 설명.
  사용자는 리모콘의 핵심 사용법만 알면되고 세부적인하드웨어 및 소프트웨어는 몰라도됨. 
  리모콘 기능만 그대로 유지한다면 세부적인 내용은 언제든지 업데이트 가능.
  
1.3알고리즘 성능분석
- 프로그램 작성 시 계산시간을 줄이고 메모리를 효율적으로 사용하는것은 프로그램의 효율성을 높이는 것.
  시대가 갈수록 자료가 방대해 지므로 더욱 중요해 지고 있다.
  사용자는 갈수록 빠른 프로그램을 선호한다.
  한마디로 알고리즘을 잘 사용하여 효율적인 프로그램 작성을 해야한다는것.

- 알고리즘 시간분석을 분석하는 시간복잡도 : 수행시간을 나타내는것이 아니라 알고리즘을 이루고있는 연산들이 몇 번이나 수행되었는지를 
  표시.
  알고리즘 기억공간 분석은 공간 복잡도 : 
  빅오표기법 : 시간 복잡도 함수에서 불필요한 정보를 제거하고 알고리즘 분석을 쉽게 할 목적으로 시간복잡도를 표시하는 방법.
  빅오표기법에 의한 알고리즘 수행시간 비교 : O(1) < O(log n) < O(n log n) < O(n2) < O(2n) < O(n!)
  == 상수형 < 로그형 < 선형 < 선형로그형 < 2차형 < 지수형 < 팩토리얼형


