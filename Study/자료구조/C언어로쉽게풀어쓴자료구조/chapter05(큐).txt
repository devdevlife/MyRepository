chapter05(큐)
5.1큐(queue) 추상데이터 타입.
- 먼저 들어온 데이터가 먼저 나가는 선입선출 구조.
- 스택은 삽입,삭제가 한곳에서 일어나지만 큐는 각기 다른쪽에서 일어남(삽입 후단 rear / 삭제 전단 front).

5.2선형큐
- rear, front, 배열 을 만든후 -1 값으로 초기화 하고 추가는 enqueu는 rear 에 dequeue는 front에서 하면된다.
- 문제점이 있다 배열의 데이터가 가득차면 더이상 넣을수 없으며 rear가 맥스치에 도달하면 앞으로 데이터를 수시로 밀어주어야 한다.

5.3원형큐
- 선형큐의 단점을 보완 rear 가 맥스값이 되면 가장 첫번째 요소로 다시 이동시켜서 사용됨.
- 초기화는 모두 0번인덱스로 시키며 추가시 인덱스를 증가한 후에 등록, 삭제시는 인덱스 증가 후 삭제, 하나의 인덱스는 비워둔다 공백상태와 
  포화 상태를 구분하기 위함이다. 
- rear, front 가 같다는건 비어있는 상태, rear + 1 == front 같다면 포화 상태이다.
- rear, front 증감연산자 사용 후 처리.

5.4큐의 응용:버퍼
- 서로 다른 속도의 프로세스간 상호작용을 조화시키는 버퍼 역할을 한다. 프린팅버퍼, 키보드버퍼 등.

5.5덱(deque)
- 앞뒤로 삽입,삭제,반환이 가능하다. 여전히 중간에서는 불가능.
- 원형큐와 똑같은 구조로 만들고 front 에도 rear와 같이 추가 기능만 추가하면 됨.
- rear 추가,삭제는 증감연산자 처리먼저 하고 후 처리. 원형큐와 동일 / front는 원형큐와 다르게 먼저 처리한 다음 후 증감연산자사용
- 같은 위치는 공백, 증감&감소 후 같으면 같다면 풀.

5.6큐의 응용:시뮬레이션
- 은행 업무 처리를 시뮬레이션 하였음.
