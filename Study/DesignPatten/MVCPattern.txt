MVC Pattern

Model(정보 및 데이터)
	1.사용자가 편집하길 원하는 모든 데이터를 가지고 있어야 한다.
	2.뷰나 컨트롤러에 대해서 어떤 정보도 알지 말아야 한다.
	3.변경이 일어나면 변경 통지에 대한 처리방법을 구현해야만 한다.

View(UI 인터페이스, 입력 및 출력)
	1.모델이 가지고 있는 정보를 따로 저장해서는 안된다.
	2.모델이나 컨트롤러와 같이 다른 구성요소들을 몰라야 한다.
	3.변경이 일어나면 변경통지에 대한 처리방법을 구현해야만 한다.

Controller(모델과 뷰를 연결하는 다리역할)
	1.모델이나 뷰에 대해서 알고 있어야 한다.
	2.모델이나 뷰의 변경을 모니터링 해야 한다.

# 하는 일을 분리하여 처리 효율성을 높여라. 이렇게 하면 유지보수성, 확장성, 유연성이 증가하고 중복 
코딩의 문제점도 사라진다.

