Chapter9(게임 루프)
9.1 의도
- 게임 시간 진행을 유저입력과 프로세스 속도와 디커플링한다.... 뭔소리지...

9.2 동기
- 게임붙야에 가장 널리 필수적으로 사용되는 패턴이다.
- 하드웨어마다 성능이 달라서 FPS이 다르다 어떤 하드웨어든간에 일정속도로 실행될수 있도록 하는것이 이번 게임루프의 핵심업무다.

9.3 패턴
- 게임루프는 게임내내 실행된다 유저의 입력상태에 따라 상태를 업데이트하고 게임 화면을 렌더링한다 시간 흐름에 따라 플레이 속도를조절한다.

9.4 언제 쓸 것인가?
- 적을 내용이 딱히 없다.

9.5 주의사항
- 게임루프는 게임 코드중에서 가장 핵심적인 부분이다 10프로의 코드가 프로그램 실행시간 90프로를 차지한다고들 한다 그만큼 중요하고 
  최적화를 고려해서 만들어야된다.

9.6 예제코드
- 마지막 업데이트시간에서 현제시간을 뺀 남은 시간을 업데이트에 전달하여 흘러간 시간만큼 업데이트를 해보자 보통 시간을 소수점이하로 
  끊어서 업데이트를 하다보면 10번 돌아간 시간과 3번돌아간 시간의 오차가 갈수록 벌어짐을 알수있다. 문제가 있다.
- 마지막 업데이트 시간에서 현제시간을 빼고 흘러간 시간을 고정프레임 시간만큼 업데이트를 돌려주자 하지만 또 문제가 생긴다 흘러간 시간이 
  고정프레임을 넘어 2번 업데이트를 하고 렌더러를 호출한다면 그 중간 렌더링은 건너뛰고 2번 업데이트 후 렌더링이 될것이다 튀는 문제가 
  생긴다. 렌더러를 업데이트 할때만다 호출을 해주되 lag / MS_PER_UPDATE 정규화하여 레더러를 호출하면 자연스럽게 계산된 값으로 렌더링
  이 될것이다 당연히 업데이트 하기전에는 정확한 위치를 알수없지만 적어도 움직임이 튀는것보다는 덜 거슬린다.

9.7 디자인 결과 
- 모바일게임은 그래픽보다는 플레이품질에 더 집중하는 편이다 프레임레이트에 상한을 두는게 보통이고 프레임 시간안에 할일이 전부 끝났다면
  sleep을 호출한다. 이렇게 하면 배터리 소모도 줄일수 있다.


*유니티 모노비헤이비어라이프사이클은 게임 루프를 그림으로 아주 잘 설명 하고 있다.
