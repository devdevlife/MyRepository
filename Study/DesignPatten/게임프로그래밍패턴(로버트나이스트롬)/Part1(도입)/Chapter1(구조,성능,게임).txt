1.1 소프트웨어 구조란?
- 얼마나 쉽게 병경할수 있느냐가 코드 설계를 평가하는 척도가 된다.
- 업무할당 > 코드파악 > 문제 해결 코드 작성 > 코드 정리.
- 코드를 보고 머리속으로 큰그림을 그리고 나면 해결책을 찾을수 있다.
- 양쪽 코드가 있는데 한쪽 코드만 봐서는 이해가 가지 않는다면 커플링 되어있다고 봐야됨.
- 작업에 들어가기전에 알아야 할 지식을 줄이는것. 이것이 내가 생각하는 소프트웨어 구조의 핵심목표이다.
- 디커플링 작업은 한쪽을 변경하더라도 다른 한쪽에 영향을 받지 않게 하는것 게임 코드에 미치는 영향이 적다.

1.2 비용은?
- 좋은구조는 생상성을 올려준다.
- 결국... 많은 노력과 원칙이 필요하다... ㅡ.,ㅡ 
- 디커플링과 추상화를 고려해서 만들면 좋겠지만 앞으로 일정이 어떻게 변할지 모르니 예측하기 힘든부분도 있다. 어렵게 만든 코드를 써먹지 
못한다면 코드만 늘어나고 안하느니만 못하다. 결국 수천번씩 코드를 수정하면서 구조 조정에 노력을 ...... 

1.3 성능과 속도
